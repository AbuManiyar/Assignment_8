# -*- coding: utf-8 -*-
"""Assignment_8.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1RtrrPcxPCYtwj20no9C0q9WyOVjR1D-6

1. In Python, what is the difference between a built-in function and a user-defined function? Provide an example of each.
Ans: Difference between built-in function and a user defined function is
that, Python has has predefined functions which can be diretcly used
without defining them example print() function is a built-in function. On
the other hand user-defined function are those which needs to be defined
before calling them directly example:- music() can be a user defined function.

2. How can you pass arguments to a function in Python? Explain the difference between positional arguments and keyword arguments.
Ans: When a function is defined after its name inside the parenthesis the
required parameters are defined. When calling a particular function we
pass the required arguements that a funtion uses.
The difference between positional arguement and keyword argument is that
In positional arguements while passing arguements to funtions inside
parenthesis the order in which we palace them inside it matters. But in
case of keyword arguements this is not the case key are speciefied and
when passing arguements key is referred and used to pass arguments into
function appropriately.

3. What is the purpose of the return statement in a function? Can a function have multiple return statements? Explain with an example.
Ans: functions have return statement and is used to give the datatype
integer, string etc as an output of that funtion. function has certain
input parameters and outputs as well, so return statement helps in
returning a value(integer, dictionary, string etc.,)

4. What are lambda functions in Python? How are they different from regular functions? Provide an example where a lambda function can be useful.
Ans: lambda functions are very small functions they have only one line of
expression and it is automatically return value of that expression without
return keyword. And this is the difference between lambda functio and
regular fuction. lambda function does not uses the def keyword for
declaration of function. example:-
area = lambda length,breadth : length * breadth
the above lambda funtion can be used to get area of rection by giving
length and breadth


5. How does the concept of "scope" apply to functions in Python? Explain
the difference between local scope and global scope.
Ans: A variable declared inside a function cannot be accessed at outside of that function. It gets destroyed once that funtions executed successfully. the gloabal scope is the single region, whereas function scopes can be multiples depending upon number of functions.

6. How can you use the "return" statement in a Python function to return multiple values?
Ans: we can use the "return" statement and give a dictionary as return value to return multiple values.

7. What is the difference between the "pass by value" and "pass by reference" concepts when it comes to function arguments in Python?
Ans: In pass by value, the address of variable does not go to defned
function when it is called only the assigned value will go with a new
address inside a function. Whereas in case of pass by reference the
address will go to the funtion later it will access what value does that
address hold and changing the value will affect the original value at that
address. But When it comes to python the arguments will be passed neither
by value nor by reference. Python has mixed behavior in passing, let's say
you pass a variable and if you print id of that variable in the function
you passed it to, it will be same as the variable passed. you will say python
has pass by reference but when you change the value inside the function a
new address is assigned to that variable giving you a new id. Hence in
python we say pass by object.

8. Create a function that can intake integer or decimal value and do following operations:
a. Logarithmic function (log x)
b. Exponential function (exp(x))
c. Power function with base 2 (2x)
d. Square root
Ans:
import math

def solution(x):
  a= math.log(x)
  b= math.exp(x)
  c= 2 ** x
  d = math.sqrt(x)
  print("Log = ", a)
  print("Exp = ", b)
  print("Power = ", c)
  print("Square Root", d)

num = float(input("Enter value of X = "))
solution(num)

9. Create a function that takes a full name as an argument and returns first name and last name.
Ans:
def solution2(Fname):
  s_name = Fname.split()
  f_name = s_name[0]
  l_name = s_name[1]
  print("First name = ", f_name)
  print("Last name = ", l_name)

name = input("Enter Name = ")
solution2(name)
"""